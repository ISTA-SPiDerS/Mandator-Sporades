syntax = "proto3";
option go_package = "proto/";

/*
  A MemPoolMini message is a container for all the messages for the mini blocks
  Mem-Pool-Mini-Mem-Block (from worker to worker)
  Mem-Pool-Mini-Mem-Block-Ack (from worker to worker)
  Mem-Pool-Mini-Mem-Block-Internal-Send (from worker to replica)
  Mem-Pool-Mini-Mem-Block-Internal-Send-Ack (from replica to worker)
  Mem-Pool-Mini-Mem-Block-External-Request (from replica to replica)
  Mem-Pool-Mini-Mem-Block-External-Response (from external replica to replica)
  Mem-Pool-Mini-Mem-Block-Confirm (from worker to replica)
  Mem-Pool-Mini-Mem-Block-Client-Response (from replica to worker)
*/

message MemPoolMini {
  int32 sender = 1;
  int32 receiver = 2;
  string unique_id = 3;
  int32 type = 4;
  /*
    Mem-Pool-Mini-Mem-Block 1
    Mem-Pool-Mini-Mem-Block-Ack 2
    Mem-Pool-Mini-Mem-Block-Internal-Send 3
    Mem-Pool-Mini-Mem-Block-Internal-Send-Ack 4
    Mem-Pool-Mini-Mem-Block-External-Request 5
    Mem-Pool-Mini-Mem-Block-External-Response 6
    Mem-Pool-Mini-Mem-Block-Confirm 7
    Mem-Pool-Mini-Mem-Block-Client-Response 8
  */

  string note = 5;

  message SingleOperation {
    string unique_id = 1;
    string command = 2;
  }

  message ClientBatch{
    repeated SingleOperation commands = 1;
    string id = 2;
    int32 creator = 3;
  }

  repeated ClientBatch commands = 6;
  int32 creator =7;
}

/*
  MemPool is the message for all messages related to the MemPool
  Mem-Pool-Mem-Block (from replica to replica)
  Mem-Pool-Mem-Block-Ack (from replica to replica)
  Mem-Pool-Mem-Block-Request (from replica to replica)
  Mem-Pool-Mem-Block-Response (from replica to replica)
*/

message MemPool {
  int32 sender = 1;
  int32 receiver = 2;
  string unique_id = 3;
  int32 type = 4;
  /*
    Mem-Pool-Mem-Block 1
    Mem-Pool-Mem-Block-Ack 2
    Mem-Pool-Mem-Block-Request 3
    Mem-Pool-Mem-Block-Response 4
  */
  string note = 5;

  message SingleMiniMemBlock {
    string unique_id = 1;
    int32 creator = 2;
  }
  repeated SingleMiniMemBlock minimemblocks = 6;
  int64 roundNumber = 7;
  string parentBlockId = 8;
  int32 creator = 9;
}
