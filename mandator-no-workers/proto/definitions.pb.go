// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: proto/definitions.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SingleOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *SingleOperation) Reset() {
	*x = SingleOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleOperation) ProtoMessage() {}

func (x *SingleOperation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleOperation.ProtoReflect.Descriptor instead.
func (*SingleOperation) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{0}
}

func (x *SingleOperation) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type ClientBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId string             `protobuf:"bytes,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Requests []*SingleOperation `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
	Sender   int64              `protobuf:"varint,3,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *ClientBatch) Reset() {
	*x = ClientBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatch) ProtoMessage() {}

func (x *ClientBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatch.ProtoReflect.Descriptor instead.
func (*ClientBatch) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{1}
}

func (x *ClientBatch) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *ClientBatch) GetRequests() []*SingleOperation {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *ClientBatch) GetSender() int64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` // 1 for bootstrap, 2 for log print, 3 consensus start
	Note   string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	Sender int64  `protobuf:"varint,3,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{2}
}

func (x *Status) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Status) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Status) GetSender() int64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

type MemPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   int32  `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`
	UniqueId string `protobuf:"bytes,2,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Type     int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	//
	//Mem-Pool-Mem-Block 1
	//Mem-Pool-Mem-Block-Ack 2
	//Mem-Pool-Mem-Block-Request 3
	//Mem-Pool-Mem-Block-Response 4
	Note          string         `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	ClientBatches []*ClientBatch `protobuf:"bytes,5,rep,name=clientBatches,proto3" json:"clientBatches,omitempty"`
	RoundNumber   int64          `protobuf:"varint,6,opt,name=roundNumber,proto3" json:"roundNumber,omitempty"`
	ParentBlockId string         `protobuf:"bytes,7,opt,name=parentBlockId,proto3" json:"parentBlockId,omitempty"`
	Creator       int32          `protobuf:"varint,8,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *MemPool) Reset() {
	*x = MemPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemPool) ProtoMessage() {}

func (x *MemPool) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemPool.ProtoReflect.Descriptor instead.
func (*MemPool) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{3}
}

func (x *MemPool) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *MemPool) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *MemPool) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MemPool) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *MemPool) GetClientBatches() []*ClientBatch {
	if x != nil {
		return x.ClientBatches
	}
	return nil
}

func (x *MemPool) GetRoundNumber() int64 {
	if x != nil {
		return x.RoundNumber
	}
	return 0
}

func (x *MemPool) GetParentBlockId() string {
	if x != nil {
		return x.ParentBlockId
	}
	return ""
}

func (x *MemPool) GetCreator() int32 {
	if x != nil {
		return x.Creator
	}
	return 0
}

type AsyncConsensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      int32                 `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver    int32                 `protobuf:"varint,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	UniqueId    string                `protobuf:"bytes,3,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"` // to specify the fall back block id to which the vote async is for
	Type        int32                 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`                        // 1-propose, 2-vote, 3-timeout, 4-propose-async, 5-vote-async, 6-timeout-internal, 7-consensus-external-request, 8-consensus-external-response, 9-fallback-complete
	Note        string                `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	V           int32                 `protobuf:"varint,6,opt,name=v,proto3" json:"v,omitempty"` // view number
	R           int32                 `protobuf:"varint,7,opt,name=r,proto3" json:"r,omitempty"` // round number
	BlockHigh   *AsyncConsensus_Block `protobuf:"bytes,8,opt,name=blockHigh,proto3" json:"blockHigh,omitempty"`
	BlockNew    *AsyncConsensus_Block `protobuf:"bytes,9,opt,name=blockNew,proto3" json:"blockNew,omitempty"`
	BlockCommit *AsyncConsensus_Block `protobuf:"bytes,10,opt,name=blockCommit,proto3" json:"blockCommit,omitempty"`
}

func (x *AsyncConsensus) Reset() {
	*x = AsyncConsensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncConsensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncConsensus) ProtoMessage() {}

func (x *AsyncConsensus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncConsensus.ProtoReflect.Descriptor instead.
func (*AsyncConsensus) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{4}
}

func (x *AsyncConsensus) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *AsyncConsensus) GetReceiver() int32 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

func (x *AsyncConsensus) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *AsyncConsensus) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AsyncConsensus) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AsyncConsensus) GetV() int32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *AsyncConsensus) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *AsyncConsensus) GetBlockHigh() *AsyncConsensus_Block {
	if x != nil {
		return x.BlockHigh
	}
	return nil
}

func (x *AsyncConsensus) GetBlockNew() *AsyncConsensus_Block {
	if x != nil {
		return x.BlockNew
	}
	return nil
}

func (x *AsyncConsensus) GetBlockCommit() *AsyncConsensus_Block {
	if x != nil {
		return x.BlockCommit
	}
	return nil
}

type PaxosConsensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         int32                     `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver       int32                     `protobuf:"varint,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	UniqueId       string                    `protobuf:"bytes,3,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Type           int32                     `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"` // 1-prepare, 2-promise, 3-propose, 4-accept, 5 internal timeout
	Note           string                    `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	InstanceNumber int32                     `protobuf:"varint,6,opt,name=instance_number,json=instanceNumber,proto3" json:"instance_number,omitempty"` // initial id for prepare messages, instance id for propose message
	PrepareBallot  int32                     `protobuf:"varint,7,opt,name=prepare_ballot,json=prepareBallot,proto3" json:"prepare_ballot,omitempty"`
	PromiseBallot  int32                     `protobuf:"varint,8,opt,name=promise_ballot,json=promiseBallot,proto3" json:"promise_ballot,omitempty"`
	ProposeBallot  int32                     `protobuf:"varint,9,opt,name=propose_ballot,json=proposeBallot,proto3" json:"propose_ballot,omitempty"`
	AcceptBalllot  int32                     `protobuf:"varint,10,opt,name=accept_balllot,json=acceptBalllot,proto3" json:"accept_balllot,omitempty"`
	View           int32                     `protobuf:"varint,11,opt,name=view,proto3" json:"view,omitempty"`
	PromiseReply   []*PaxosConsensusInstance `protobuf:"bytes,12,rep,name=promiseReply,proto3" json:"promiseReply,omitempty"`
	ProposeValue   []int32                   `protobuf:"varint,13,rep,packed,name=propose_value,json=proposeValue,proto3" json:"propose_value,omitempty"`
	DecidedValue   []int32                   `protobuf:"varint,14,rep,packed,name=decided_value,json=decidedValue,proto3" json:"decided_value,omitempty"` // decided value for (instance_number - 1) for a propose message
}

func (x *PaxosConsensus) Reset() {
	*x = PaxosConsensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaxosConsensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaxosConsensus) ProtoMessage() {}

func (x *PaxosConsensus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaxosConsensus.ProtoReflect.Descriptor instead.
func (*PaxosConsensus) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{5}
}

func (x *PaxosConsensus) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *PaxosConsensus) GetReceiver() int32 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

func (x *PaxosConsensus) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *PaxosConsensus) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PaxosConsensus) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *PaxosConsensus) GetInstanceNumber() int32 {
	if x != nil {
		return x.InstanceNumber
	}
	return 0
}

func (x *PaxosConsensus) GetPrepareBallot() int32 {
	if x != nil {
		return x.PrepareBallot
	}
	return 0
}

func (x *PaxosConsensus) GetPromiseBallot() int32 {
	if x != nil {
		return x.PromiseBallot
	}
	return 0
}

func (x *PaxosConsensus) GetProposeBallot() int32 {
	if x != nil {
		return x.ProposeBallot
	}
	return 0
}

func (x *PaxosConsensus) GetAcceptBalllot() int32 {
	if x != nil {
		return x.AcceptBalllot
	}
	return 0
}

func (x *PaxosConsensus) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PaxosConsensus) GetPromiseReply() []*PaxosConsensusInstance {
	if x != nil {
		return x.PromiseReply
	}
	return nil
}

func (x *PaxosConsensus) GetProposeValue() []int32 {
	if x != nil {
		return x.ProposeValue
	}
	return nil
}

func (x *PaxosConsensus) GetDecidedValue() []int32 {
	if x != nil {
		return x.DecidedValue
	}
	return nil
}

type AsyncConsensus_Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	V        int32                 `protobuf:"varint,2,opt,name=v,proto3" json:"v,omitempty"` // view number
	R        int32                 `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"` // round number
	Parent   *AsyncConsensus_Block `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Commands []int32               `protobuf:"varint,5,rep,packed,name=commands,proto3" json:"commands,omitempty"`
	Level    int32                 `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"` // for the fallback mode
}

func (x *AsyncConsensus_Block) Reset() {
	*x = AsyncConsensus_Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncConsensus_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncConsensus_Block) ProtoMessage() {}

func (x *AsyncConsensus_Block) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncConsensus_Block.ProtoReflect.Descriptor instead.
func (*AsyncConsensus_Block) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{4, 0}
}

func (x *AsyncConsensus_Block) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AsyncConsensus_Block) GetV() int32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *AsyncConsensus_Block) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *AsyncConsensus_Block) GetParent() *AsyncConsensus_Block {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *AsyncConsensus_Block) GetCommands() []int32 {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *AsyncConsensus_Block) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type PaxosConsensusInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceNumber     int32   `protobuf:"varint,1,opt,name=instance_number,json=instanceNumber,proto3" json:"instance_number,omitempty"`
	LastAcceptedBallot int32   `protobuf:"varint,2,opt,name=last_accepted_ballot,json=lastAcceptedBallot,proto3" json:"last_accepted_ballot,omitempty"`
	LastAcceptedValue  []int32 `protobuf:"varint,3,rep,packed,name=last_accepted_value,json=lastAcceptedValue,proto3" json:"last_accepted_value,omitempty"`
}

func (x *PaxosConsensusInstance) Reset() {
	*x = PaxosConsensusInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_definitions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaxosConsensusInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaxosConsensusInstance) ProtoMessage() {}

func (x *PaxosConsensusInstance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_definitions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaxosConsensusInstance.ProtoReflect.Descriptor instead.
func (*PaxosConsensusInstance) Descriptor() ([]byte, []int) {
	return file_proto_definitions_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PaxosConsensusInstance) GetInstanceNumber() int32 {
	if x != nil {
		return x.InstanceNumber
	}
	return 0
}

func (x *PaxosConsensusInstance) GetLastAcceptedBallot() int32 {
	if x != nil {
		return x.LastAcceptedBallot
	}
	return 0
}

func (x *PaxosConsensusInstance) GetLastAcceptedValue() []int32 {
	if x != nil {
		return x.LastAcceptedValue
	}
	return nil
}

var File_proto_definitions_proto protoreflect.FileDescriptor

var file_proto_definitions_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x70, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x22, 0xfc, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0xdd, 0x03, 0x0a, 0x0e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x0c, 0x0a,
	0x01, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x76, 0x12, 0x0c, 0x0a, 0x01, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x72, 0x12, 0x33, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x69, 0x67, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x69, 0x67, 0x68, 0x12, 0x31,
	0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x65,
	0x77, 0x12, 0x37, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a, 0x94, 0x01, 0x0a, 0x05, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x76, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x72,
	0x12, 0x2d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x82, 0x05, 0x0a, 0x0e, 0x50, 0x61, 0x78, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x42, 0x61,
	0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f,
	0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x6c,
	0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50,
	0x61, 0x78, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x95,
	0x01, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_definitions_proto_rawDescOnce sync.Once
	file_proto_definitions_proto_rawDescData = file_proto_definitions_proto_rawDesc
)

func file_proto_definitions_proto_rawDescGZIP() []byte {
	file_proto_definitions_proto_rawDescOnce.Do(func() {
		file_proto_definitions_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_definitions_proto_rawDescData)
	})
	return file_proto_definitions_proto_rawDescData
}

var file_proto_definitions_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_definitions_proto_goTypes = []interface{}{
	(*SingleOperation)(nil),        // 0: SingleOperation
	(*ClientBatch)(nil),            // 1: ClientBatch
	(*Status)(nil),                 // 2: Status
	(*MemPool)(nil),                // 3: MemPool
	(*AsyncConsensus)(nil),         // 4: AsyncConsensus
	(*PaxosConsensus)(nil),         // 5: PaxosConsensus
	(*AsyncConsensus_Block)(nil),   // 6: AsyncConsensus.Block
	(*PaxosConsensusInstance)(nil), // 7: PaxosConsensus.instance
}
var file_proto_definitions_proto_depIdxs = []int32{
	0, // 0: ClientBatch.requests:type_name -> SingleOperation
	1, // 1: MemPool.clientBatches:type_name -> ClientBatch
	6, // 2: AsyncConsensus.blockHigh:type_name -> AsyncConsensus.Block
	6, // 3: AsyncConsensus.blockNew:type_name -> AsyncConsensus.Block
	6, // 4: AsyncConsensus.blockCommit:type_name -> AsyncConsensus.Block
	7, // 5: PaxosConsensus.promiseReply:type_name -> PaxosConsensus.instance
	6, // 6: AsyncConsensus.Block.parent:type_name -> AsyncConsensus.Block
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_definitions_proto_init() }
func file_proto_definitions_proto_init() {
	if File_proto_definitions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_definitions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_definitions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_definitions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_definitions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_definitions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncConsensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_definitions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaxosConsensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_definitions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncConsensus_Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_definitions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaxosConsensusInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_definitions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_definitions_proto_goTypes,
		DependencyIndexes: file_proto_definitions_proto_depIdxs,
		MessageInfos:      file_proto_definitions_proto_msgTypes,
	}.Build()
	File_proto_definitions_proto = out.File
	file_proto_definitions_proto_rawDesc = nil
	file_proto_definitions_proto_goTypes = nil
	file_proto_definitions_proto_depIdxs = nil
}
